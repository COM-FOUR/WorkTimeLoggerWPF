//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WorkTimeLogger.WTL_Service {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/WTL", ConfigurationName="WTL_Service.WTL_Port")]
    public interface WTL_Port {
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:microsoft-dynamics-schemas/codeunit/WTL:GetServerTime", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        WorkTimeLogger.WTL_Service.GetServerTime_Result GetServerTime(WorkTimeLogger.WTL_Service.GetServerTime request);
        
        // CODEGEN: Der Nachrichtenvertrag wird generiert, da der Vorgang mehrere Rückgabewerte aufweist.
        [System.ServiceModel.OperationContractAttribute(Action="urn:microsoft-dynamics-schemas/codeunit/WTL:GetServerTime", ReplyAction="*")]
        System.Threading.Tasks.Task<WorkTimeLogger.WTL_Service.GetServerTime_Result> GetServerTimeAsync(WorkTimeLogger.WTL_Service.GetServerTime request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:microsoft-dynamics-schemas/codeunit/WTL:GetStaffMember", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        WorkTimeLogger.WTL_Service.GetStaffMember_Result GetStaffMember(WorkTimeLogger.WTL_Service.GetStaffMember request);
        
        // CODEGEN: Der Nachrichtenvertrag wird generiert, da der Vorgang mehrere Rückgabewerte aufweist.
        [System.ServiceModel.OperationContractAttribute(Action="urn:microsoft-dynamics-schemas/codeunit/WTL:GetStaffMember", ReplyAction="*")]
        System.Threading.Tasks.Task<WorkTimeLogger.WTL_Service.GetStaffMember_Result> GetStaffMemberAsync(WorkTimeLogger.WTL_Service.GetStaffMember request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:microsoft-dynamics-schemas/codeunit/WTL:GetShiftplan", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        WorkTimeLogger.WTL_Service.GetShiftplan_Result GetShiftplan(WorkTimeLogger.WTL_Service.GetShiftplan request);
        
        // CODEGEN: Der Nachrichtenvertrag wird generiert, da der Vorgang mehrere Rückgabewerte aufweist.
        [System.ServiceModel.OperationContractAttribute(Action="urn:microsoft-dynamics-schemas/codeunit/WTL:GetShiftplan", ReplyAction="*")]
        System.Threading.Tasks.Task<WorkTimeLogger.WTL_Service.GetShiftplan_Result> GetShiftplanAsync(WorkTimeLogger.WTL_Service.GetShiftplan request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:microsoft-dynamics-schemas/codeunit/WTL:GetWorkTime", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        WorkTimeLogger.WTL_Service.GetWorkTime_Result GetWorkTime(WorkTimeLogger.WTL_Service.GetWorkTime request);
        
        // CODEGEN: Der Nachrichtenvertrag wird generiert, da der Vorgang mehrere Rückgabewerte aufweist.
        [System.ServiceModel.OperationContractAttribute(Action="urn:microsoft-dynamics-schemas/codeunit/WTL:GetWorkTime", ReplyAction="*")]
        System.Threading.Tasks.Task<WorkTimeLogger.WTL_Service.GetWorkTime_Result> GetWorkTimeAsync(WorkTimeLogger.WTL_Service.GetWorkTime request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:microsoft-dynamics-schemas/codeunit/WTL:GetLastWorkTime", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        WorkTimeLogger.WTL_Service.GetLastWorkTime_Result GetLastWorkTime(WorkTimeLogger.WTL_Service.GetLastWorkTime request);
        
        // CODEGEN: Der Nachrichtenvertrag wird generiert, da der Vorgang mehrere Rückgabewerte aufweist.
        [System.ServiceModel.OperationContractAttribute(Action="urn:microsoft-dynamics-schemas/codeunit/WTL:GetLastWorkTime", ReplyAction="*")]
        System.Threading.Tasks.Task<WorkTimeLogger.WTL_Service.GetLastWorkTime_Result> GetLastWorkTimeAsync(WorkTimeLogger.WTL_Service.GetLastWorkTime request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:microsoft-dynamics-schemas/codeunit/WTL:GetWorkTimeSurplus", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        WorkTimeLogger.WTL_Service.GetWorkTimeSurplus_Result GetWorkTimeSurplus(WorkTimeLogger.WTL_Service.GetWorkTimeSurplus request);
        
        // CODEGEN: Der Nachrichtenvertrag wird generiert, da der Vorgang mehrere Rückgabewerte aufweist.
        [System.ServiceModel.OperationContractAttribute(Action="urn:microsoft-dynamics-schemas/codeunit/WTL:GetWorkTimeSurplus", ReplyAction="*")]
        System.Threading.Tasks.Task<WorkTimeLogger.WTL_Service.GetWorkTimeSurplus_Result> GetWorkTimeSurplusAsync(WorkTimeLogger.WTL_Service.GetWorkTimeSurplus request);
        
        // CODEGEN: Der Nachrichtenvertrag wird generiert, da der Wrappername (SetWorkTime_Result) von Nachricht "SetWorkTime_Result" nicht mit dem Standardwert (SetWorkTime) übereinstimmt.
        [System.ServiceModel.OperationContractAttribute(Action="urn:microsoft-dynamics-schemas/codeunit/WTL:SetWorkTime", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        WorkTimeLogger.WTL_Service.SetWorkTime_Result SetWorkTime(WorkTimeLogger.WTL_Service.SetWorkTime request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:microsoft-dynamics-schemas/codeunit/WTL:SetWorkTime", ReplyAction="*")]
        System.Threading.Tasks.Task<WorkTimeLogger.WTL_Service.SetWorkTime_Result> SetWorkTimeAsync(WorkTimeLogger.WTL_Service.SetWorkTime request);
        
        // CODEGEN: Der Nachrichtenvertrag wird generiert, da der Wrappername (DeleteWorkTime_Result) von Nachricht "DeleteWorkTime_Result" nicht mit dem Standardwert (DeleteWorkTime) übereinstimmt.
        [System.ServiceModel.OperationContractAttribute(Action="urn:microsoft-dynamics-schemas/codeunit/WTL:DeleteWorkTime", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        WorkTimeLogger.WTL_Service.DeleteWorkTime_Result DeleteWorkTime(WorkTimeLogger.WTL_Service.DeleteWorkTime request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:microsoft-dynamics-schemas/codeunit/WTL:DeleteWorkTime", ReplyAction="*")]
        System.Threading.Tasks.Task<WorkTimeLogger.WTL_Service.DeleteWorkTime_Result> DeleteWorkTimeAsync(WorkTimeLogger.WTL_Service.DeleteWorkTime request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:microsoft-dynamics-schemas/codeunit/WTL:GetVacation", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        WorkTimeLogger.WTL_Service.GetVacation_Result GetVacation(WorkTimeLogger.WTL_Service.GetVacation request);
        
        // CODEGEN: Der Nachrichtenvertrag wird generiert, da der Vorgang mehrere Rückgabewerte aufweist.
        [System.ServiceModel.OperationContractAttribute(Action="urn:microsoft-dynamics-schemas/codeunit/WTL:GetVacation", ReplyAction="*")]
        System.Threading.Tasks.Task<WorkTimeLogger.WTL_Service.GetVacation_Result> GetVacationAsync(WorkTimeLogger.WTL_Service.GetVacation request);
        
        // CODEGEN: Der Nachrichtenvertrag wird generiert, da der Wrappername (SetDefaultBreak_Result) von Nachricht "SetDefaultBreak_Result" nicht mit dem Standardwert (SetDefaultBreak) übereinstimmt.
        [System.ServiceModel.OperationContractAttribute(Action="urn:microsoft-dynamics-schemas/codeunit/WTL:SetDefaultBreak", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        WorkTimeLogger.WTL_Service.SetDefaultBreak_Result SetDefaultBreak(WorkTimeLogger.WTL_Service.SetDefaultBreak request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:microsoft-dynamics-schemas/codeunit/WTL:SetDefaultBreak", ReplyAction="*")]
        System.Threading.Tasks.Task<WorkTimeLogger.WTL_Service.SetDefaultBreak_Result> SetDefaultBreakAsync(WorkTimeLogger.WTL_Service.SetDefaultBreak request);
        
        // CODEGEN: Der Nachrichtenvertrag wird generiert, da der Wrappername (ChangePassword_Result) von Nachricht "ChangePassword_Result" nicht mit dem Standardwert (ChangePassword) übereinstimmt.
        [System.ServiceModel.OperationContractAttribute(Action="urn:microsoft-dynamics-schemas/codeunit/WTL:ChangePassword", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        WorkTimeLogger.WTL_Service.ChangePassword_Result ChangePassword(WorkTimeLogger.WTL_Service.ChangePassword request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:microsoft-dynamics-schemas/codeunit/WTL:ChangePassword", ReplyAction="*")]
        System.Threading.Tasks.Task<WorkTimeLogger.WTL_Service.ChangePassword_Result> ChangePasswordAsync(WorkTimeLogger.WTL_Service.ChangePassword request);
        
        // CODEGEN: Der Nachrichtenvertrag wird generiert, da der Wrappername (StaffIsManager_Result) von Nachricht "StaffIsManager_Result" nicht mit dem Standardwert (StaffIsManager) übereinstimmt.
        [System.ServiceModel.OperationContractAttribute(Action="urn:microsoft-dynamics-schemas/codeunit/WTL:StaffIsManager", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        WorkTimeLogger.WTL_Service.StaffIsManager_Result StaffIsManager(WorkTimeLogger.WTL_Service.StaffIsManager request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:microsoft-dynamics-schemas/codeunit/WTL:StaffIsManager", ReplyAction="*")]
        System.Threading.Tasks.Task<WorkTimeLogger.WTL_Service.StaffIsManager_Result> StaffIsManagerAsync(WorkTimeLogger.WTL_Service.StaffIsManager request);
        
        // CODEGEN: Der Nachrichtenvertrag wird generiert, da der Wrappername (GetCurrEmployeeNo_Result) von Nachricht "GetCurrEmployeeNo_Result" nicht mit dem Standardwert (GetCurrEmployeeNo) übereinstimmt.
        [System.ServiceModel.OperationContractAttribute(Action="urn:microsoft-dynamics-schemas/codeunit/WTL:GetCurrEmployeeNo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        WorkTimeLogger.WTL_Service.GetCurrEmployeeNo_Result GetCurrEmployeeNo(WorkTimeLogger.WTL_Service.GetCurrEmployeeNo request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:microsoft-dynamics-schemas/codeunit/WTL:GetCurrEmployeeNo", ReplyAction="*")]
        System.Threading.Tasks.Task<WorkTimeLogger.WTL_Service.GetCurrEmployeeNo_Result> GetCurrEmployeeNoAsync(WorkTimeLogger.WTL_Service.GetCurrEmployeeNo request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetServerTime", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/WTL", IsWrapped=true)]
    public partial class GetServerTime {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/WTL", Order=0)]
        public string signature;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/WTL", Order=1)]
        public System.DateTime serverTime;
        
        public GetServerTime() {
        }
        
        public GetServerTime(string signature, System.DateTime serverTime) {
            this.signature = signature;
            this.serverTime = serverTime;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetServerTime_Result", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/WTL", IsWrapped=true)]
    public partial class GetServerTime_Result {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/WTL", Order=0)]
        public bool return_value;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/WTL", Order=1)]
        public System.DateTime serverTime;
        
        public GetServerTime_Result() {
        }
        
        public GetServerTime_Result(bool return_value, System.DateTime serverTime) {
            this.return_value = return_value;
            this.serverTime = serverTime;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-nav/xmlports/x50014")]
    public partial class Member : object, System.ComponentModel.INotifyPropertyChanged {
        
        private Staff[] staffField;
        
        private string[] textField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Staff", Order=0)]
        public Staff[] Staff {
            get {
                return this.staffField;
            }
            set {
                this.staffField = value;
                this.RaisePropertyChanged("Staff");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
                this.RaisePropertyChanged("Text");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-nav/xmlports/x50014")]
    public partial class Staff : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string staffNoField;
        
        private string firstNameField;
        
        private string lastNameField;
        
        private string statisticsGroupCodeField;
        
        private string weeklyWorkingHoursField;
        
        private string dailyBreakField;
        
        private string breakAfterField;
        
        private string hasSmokingBreakField;
        
        private string loginMessageField;
        
        private string logoutMessageField;
        
        private string isManagerField;
        
        private string isCurrentLoginField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string StaffNo {
            get {
                return this.staffNoField;
            }
            set {
                this.staffNoField = value;
                this.RaisePropertyChanged("StaffNo");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
                this.RaisePropertyChanged("FirstName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string LastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
                this.RaisePropertyChanged("LastName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string StatisticsGroupCode {
            get {
                return this.statisticsGroupCodeField;
            }
            set {
                this.statisticsGroupCodeField = value;
                this.RaisePropertyChanged("StatisticsGroupCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string WeeklyWorkingHours {
            get {
                return this.weeklyWorkingHoursField;
            }
            set {
                this.weeklyWorkingHoursField = value;
                this.RaisePropertyChanged("WeeklyWorkingHours");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string DailyBreak {
            get {
                return this.dailyBreakField;
            }
            set {
                this.dailyBreakField = value;
                this.RaisePropertyChanged("DailyBreak");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string BreakAfter {
            get {
                return this.breakAfterField;
            }
            set {
                this.breakAfterField = value;
                this.RaisePropertyChanged("BreakAfter");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string hasSmokingBreak {
            get {
                return this.hasSmokingBreakField;
            }
            set {
                this.hasSmokingBreakField = value;
                this.RaisePropertyChanged("hasSmokingBreak");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public string LoginMessage {
            get {
                return this.loginMessageField;
            }
            set {
                this.loginMessageField = value;
                this.RaisePropertyChanged("LoginMessage");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public string LogoutMessage {
            get {
                return this.logoutMessageField;
            }
            set {
                this.logoutMessageField = value;
                this.RaisePropertyChanged("LogoutMessage");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public string isManager {
            get {
                return this.isManagerField;
            }
            set {
                this.isManagerField = value;
                this.RaisePropertyChanged("isManager");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public string isCurrentLogin {
            get {
                return this.isCurrentLoginField;
            }
            set {
                this.isCurrentLoginField = value;
                this.RaisePropertyChanged("isCurrentLogin");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-nav/xmlports/x50016")]
    public partial class VacationDay : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string dateField;
        
        private string halfDayField;
        
        private string postedField;
        
        private string workShiftCodeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Date {
            get {
                return this.dateField;
            }
            set {
                this.dateField = value;
                this.RaisePropertyChanged("Date");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string HalfDay {
            get {
                return this.halfDayField;
            }
            set {
                this.halfDayField = value;
                this.RaisePropertyChanged("HalfDay");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string Posted {
            get {
                return this.postedField;
            }
            set {
                this.postedField = value;
                this.RaisePropertyChanged("Posted");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string WorkShiftCode {
            get {
                return this.workShiftCodeField;
            }
            set {
                this.workShiftCodeField = value;
                this.RaisePropertyChanged("WorkShiftCode");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-nav/xmlports/x50016")]
    public partial class VacationDays : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string yearlyVacationField;
        
        private string remainingVacationField;
        
        private string daysOfIllnessField;
        
        private VacationDay[] vacationDayField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string YearlyVacation {
            get {
                return this.yearlyVacationField;
            }
            set {
                this.yearlyVacationField = value;
                this.RaisePropertyChanged("YearlyVacation");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string RemainingVacation {
            get {
                return this.remainingVacationField;
            }
            set {
                this.remainingVacationField = value;
                this.RaisePropertyChanged("RemainingVacation");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string DaysOfIllness {
            get {
                return this.daysOfIllnessField;
            }
            set {
                this.daysOfIllnessField = value;
                this.RaisePropertyChanged("DaysOfIllness");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("VacationDay", Order=3)]
        public VacationDay[] VacationDay {
            get {
                return this.vacationDayField;
            }
            set {
                this.vacationDayField = value;
                this.RaisePropertyChanged("VacationDay");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-nav/xmlports/x50018")]
    public partial class Surplus : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string dateField;
        
        private string nameField;
        
        private string workShiftOfDateField;
        
        private string workHoursPlannedField;
        
        private string workHoursLoggedField;
        
        private string workBreaksField;
        
        private string errorOccurredField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Date {
            get {
                return this.dateField;
            }
            set {
                this.dateField = value;
                this.RaisePropertyChanged("Date");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("Name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string WorkShiftOfDate {
            get {
                return this.workShiftOfDateField;
            }
            set {
                this.workShiftOfDateField = value;
                this.RaisePropertyChanged("WorkShiftOfDate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string WorkHoursPlanned {
            get {
                return this.workHoursPlannedField;
            }
            set {
                this.workHoursPlannedField = value;
                this.RaisePropertyChanged("WorkHoursPlanned");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string WorkHoursLogged {
            get {
                return this.workHoursLoggedField;
            }
            set {
                this.workHoursLoggedField = value;
                this.RaisePropertyChanged("WorkHoursLogged");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string WorkBreaks {
            get {
                return this.workBreaksField;
            }
            set {
                this.workBreaksField = value;
                this.RaisePropertyChanged("WorkBreaks");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string ErrorOccurred {
            get {
                return this.errorOccurredField;
            }
            set {
                this.errorOccurredField = value;
                this.RaisePropertyChanged("ErrorOccurred");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-nav/xmlports/x50018")]
    public partial class WorkTimeSurplus : object, System.ComponentModel.INotifyPropertyChanged {
        
        private Surplus[] surplusField;
        
        private string sumWorkHoursPlannedField;
        
        private string sumWorkHoursLoggedField;
        
        private string[] textField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Surplus", Order=0)]
        public Surplus[] Surplus {
            get {
                return this.surplusField;
            }
            set {
                this.surplusField = value;
                this.RaisePropertyChanged("Surplus");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string SumWorkHoursPlanned {
            get {
                return this.sumWorkHoursPlannedField;
            }
            set {
                this.sumWorkHoursPlannedField = value;
                this.RaisePropertyChanged("SumWorkHoursPlanned");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string SumWorkHoursLogged {
            get {
                return this.sumWorkHoursLoggedField;
            }
            set {
                this.sumWorkHoursLoggedField = value;
                this.RaisePropertyChanged("SumWorkHoursLogged");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
                this.RaisePropertyChanged("Text");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-nav/xmlports/x50015")]
    public partial class WorkTime : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string staffIDField;
        
        private string logDateTimeField;
        
        private string logTypeField;
        
        private string logSubtypeField;
        
        private string creatorField;
        
        private string skipField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string StaffID {
            get {
                return this.staffIDField;
            }
            set {
                this.staffIDField = value;
                this.RaisePropertyChanged("StaffID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string LogDateTime {
            get {
                return this.logDateTimeField;
            }
            set {
                this.logDateTimeField = value;
                this.RaisePropertyChanged("LogDateTime");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string LogType {
            get {
                return this.logTypeField;
            }
            set {
                this.logTypeField = value;
                this.RaisePropertyChanged("LogType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string LogSubtype {
            get {
                return this.logSubtypeField;
            }
            set {
                this.logSubtypeField = value;
                this.RaisePropertyChanged("LogSubtype");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string Creator {
            get {
                return this.creatorField;
            }
            set {
                this.creatorField = value;
                this.RaisePropertyChanged("Creator");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string Skip {
            get {
                return this.skipField;
            }
            set {
                this.skipField = value;
                this.RaisePropertyChanged("Skip");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-nav/xmlports/x50015")]
    public partial class WorkTimes : object, System.ComponentModel.INotifyPropertyChanged {
        
        private WorkTime[] workTimeField;
        
        private string[] textField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("WorkTime", Order=0)]
        public WorkTime[] WorkTime {
            get {
                return this.workTimeField;
            }
            set {
                this.workTimeField = value;
                this.RaisePropertyChanged("WorkTime");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
                this.RaisePropertyChanged("Text");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-nav/xmlports/x50017")]
    public partial class WeekDay : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string empNoField;
        
        private string dayOfWeekField;
        
        private string dateField;
        
        private string workShiftField;
        
        private string workTimeField;
        
        private string colorField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string EmpNo {
            get {
                return this.empNoField;
            }
            set {
                this.empNoField = value;
                this.RaisePropertyChanged("EmpNo");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string DayOfWeek {
            get {
                return this.dayOfWeekField;
            }
            set {
                this.dayOfWeekField = value;
                this.RaisePropertyChanged("DayOfWeek");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string Date {
            get {
                return this.dateField;
            }
            set {
                this.dateField = value;
                this.RaisePropertyChanged("Date");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string WorkShift {
            get {
                return this.workShiftField;
            }
            set {
                this.workShiftField = value;
                this.RaisePropertyChanged("WorkShift");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string WorkTime {
            get {
                return this.workTimeField;
            }
            set {
                this.workTimeField = value;
                this.RaisePropertyChanged("WorkTime");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string Color {
            get {
                return this.colorField;
            }
            set {
                this.colorField = value;
                this.RaisePropertyChanged("Color");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-nav/xmlports/x50017")]
    public partial class PlanEntry : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string staffNoField;
        
        private string fullNameField;
        
        private string weekNoField;
        
        private string hasWeekDaysField;
        
        private WeekDay[] weekDayField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string StaffNo {
            get {
                return this.staffNoField;
            }
            set {
                this.staffNoField = value;
                this.RaisePropertyChanged("StaffNo");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string FullName {
            get {
                return this.fullNameField;
            }
            set {
                this.fullNameField = value;
                this.RaisePropertyChanged("FullName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string WeekNo {
            get {
                return this.weekNoField;
            }
            set {
                this.weekNoField = value;
                this.RaisePropertyChanged("WeekNo");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string hasWeekDays {
            get {
                return this.hasWeekDaysField;
            }
            set {
                this.hasWeekDaysField = value;
                this.RaisePropertyChanged("hasWeekDays");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("WeekDay", Order=4)]
        public WeekDay[] WeekDay {
            get {
                return this.weekDayField;
            }
            set {
                this.weekDayField = value;
                this.RaisePropertyChanged("WeekDay");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-nav/xmlports/x50017")]
    public partial class ShiftPlans : object, System.ComponentModel.INotifyPropertyChanged {
        
        private PlanEntry[] planEntryField;
        
        private string[] textField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("PlanEntry", Order=0)]
        public PlanEntry[] PlanEntry {
            get {
                return this.planEntryField;
            }
            set {
                this.planEntryField = value;
                this.RaisePropertyChanged("PlanEntry");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
                this.RaisePropertyChanged("Text");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetStaffMember", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/WTL", IsWrapped=true)]
    public partial class GetStaffMember {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/WTL", Order=0)]
        public string signature;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/WTL", Order=1)]
        public string staffFilter;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/WTL", Order=2)]
        public WorkTimeLogger.WTL_Service.Member staff;
        
        public GetStaffMember() {
        }
        
        public GetStaffMember(string signature, string staffFilter, WorkTimeLogger.WTL_Service.Member staff) {
            this.signature = signature;
            this.staffFilter = staffFilter;
            this.staff = staff;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetStaffMember_Result", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/WTL", IsWrapped=true)]
    public partial class GetStaffMember_Result {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/WTL", Order=0)]
        public bool return_value;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/WTL", Order=1)]
        public WorkTimeLogger.WTL_Service.Member staff;
        
        public GetStaffMember_Result() {
        }
        
        public GetStaffMember_Result(bool return_value, WorkTimeLogger.WTL_Service.Member staff) {
            this.return_value = return_value;
            this.staff = staff;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetShiftplan", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/WTL", IsWrapped=true)]
    public partial class GetShiftplan {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/WTL", Order=0)]
        public string signature;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/WTL", Order=1)]
        public int year;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/WTL", Order=2)]
        public int weekNo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/WTL", Order=3)]
        public WorkTimeLogger.WTL_Service.ShiftPlans shiftplans;
        
        public GetShiftplan() {
        }
        
        public GetShiftplan(string signature, int year, int weekNo, WorkTimeLogger.WTL_Service.ShiftPlans shiftplans) {
            this.signature = signature;
            this.year = year;
            this.weekNo = weekNo;
            this.shiftplans = shiftplans;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetShiftplan_Result", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/WTL", IsWrapped=true)]
    public partial class GetShiftplan_Result {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/WTL", Order=0)]
        public bool return_value;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/WTL", Order=1)]
        public WorkTimeLogger.WTL_Service.ShiftPlans shiftplans;
        
        public GetShiftplan_Result() {
        }
        
        public GetShiftplan_Result(bool return_value, WorkTimeLogger.WTL_Service.ShiftPlans shiftplans) {
            this.return_value = return_value;
            this.shiftplans = shiftplans;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetWorkTime", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/WTL", IsWrapped=true)]
    public partial class GetWorkTime {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/WTL", Order=0)]
        public string signature;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/WTL", Order=1)]
        public string staffID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/WTL", Order=2)]
        public string dateFrom;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/WTL", Order=3)]
        public string dateTo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/WTL", Order=4)]
        public WorkTimeLogger.WTL_Service.WorkTimes workTimes;
        
        public GetWorkTime() {
        }
        
        public GetWorkTime(string signature, string staffID, string dateFrom, string dateTo, WorkTimeLogger.WTL_Service.WorkTimes workTimes) {
            this.signature = signature;
            this.staffID = staffID;
            this.dateFrom = dateFrom;
            this.dateTo = dateTo;
            this.workTimes = workTimes;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetWorkTime_Result", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/WTL", IsWrapped=true)]
    public partial class GetWorkTime_Result {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/WTL", Order=0)]
        public bool return_value;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/WTL", Order=1)]
        public WorkTimeLogger.WTL_Service.WorkTimes workTimes;
        
        public GetWorkTime_Result() {
        }
        
        public GetWorkTime_Result(bool return_value, WorkTimeLogger.WTL_Service.WorkTimes workTimes) {
            this.return_value = return_value;
            this.workTimes = workTimes;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetLastWorkTime", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/WTL", IsWrapped=true)]
    public partial class GetLastWorkTime {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/WTL", Order=0)]
        public string signature;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/WTL", Order=1)]
        public string staffID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/WTL", Order=2)]
        public WorkTimeLogger.WTL_Service.WorkTimes workTimes;
        
        public GetLastWorkTime() {
        }
        
        public GetLastWorkTime(string signature, string staffID, WorkTimeLogger.WTL_Service.WorkTimes workTimes) {
            this.signature = signature;
            this.staffID = staffID;
            this.workTimes = workTimes;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetLastWorkTime_Result", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/WTL", IsWrapped=true)]
    public partial class GetLastWorkTime_Result {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/WTL", Order=0)]
        public bool return_value;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/WTL", Order=1)]
        public WorkTimeLogger.WTL_Service.WorkTimes workTimes;
        
        public GetLastWorkTime_Result() {
        }
        
        public GetLastWorkTime_Result(bool return_value, WorkTimeLogger.WTL_Service.WorkTimes workTimes) {
            this.return_value = return_value;
            this.workTimes = workTimes;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetWorkTimeSurplus", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/WTL", IsWrapped=true)]
    public partial class GetWorkTimeSurplus {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/WTL", Order=0)]
        public string signature;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/WTL", Order=1)]
        public string staffID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/WTL", Order=2)]
        public int _Mode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/WTL", Order=3)]
        public string dateFrom;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/WTL", Order=4)]
        public string dateTo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/WTL", Order=5)]
        public WorkTimeLogger.WTL_Service.WorkTimeSurplus workTimeSurpluses;
        
        public GetWorkTimeSurplus() {
        }
        
        public GetWorkTimeSurplus(string signature, string staffID, int _Mode, string dateFrom, string dateTo, WorkTimeLogger.WTL_Service.WorkTimeSurplus workTimeSurpluses) {
            this.signature = signature;
            this.staffID = staffID;
            this._Mode = _Mode;
            this.dateFrom = dateFrom;
            this.dateTo = dateTo;
            this.workTimeSurpluses = workTimeSurpluses;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetWorkTimeSurplus_Result", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/WTL", IsWrapped=true)]
    public partial class GetWorkTimeSurplus_Result {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/WTL", Order=0)]
        public bool return_value;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/WTL", Order=1)]
        public WorkTimeLogger.WTL_Service.WorkTimeSurplus workTimeSurpluses;
        
        public GetWorkTimeSurplus_Result() {
        }
        
        public GetWorkTimeSurplus_Result(bool return_value, WorkTimeLogger.WTL_Service.WorkTimeSurplus workTimeSurpluses) {
            this.return_value = return_value;
            this.workTimeSurpluses = workTimeSurpluses;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetWorkTime", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/WTL", IsWrapped=true)]
    public partial class SetWorkTime {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/WTL", Order=0)]
        public string signature;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/WTL", Order=1)]
        public string staffID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/WTL", Order=2)]
        public string logDateTimeText;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/WTL", Order=3)]
        public string logType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/WTL", Order=4)]
        public string logSubType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/WTL", Order=5)]
        public string creator;
        
        public SetWorkTime() {
        }
        
        public SetWorkTime(string signature, string staffID, string logDateTimeText, string logType, string logSubType, string creator) {
            this.signature = signature;
            this.staffID = staffID;
            this.logDateTimeText = logDateTimeText;
            this.logType = logType;
            this.logSubType = logSubType;
            this.creator = creator;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetWorkTime_Result", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/WTL", IsWrapped=true)]
    public partial class SetWorkTime_Result {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/WTL", Order=0)]
        public bool return_value;
        
        public SetWorkTime_Result() {
        }
        
        public SetWorkTime_Result(bool return_value) {
            this.return_value = return_value;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteWorkTime", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/WTL", IsWrapped=true)]
    public partial class DeleteWorkTime {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/WTL", Order=0)]
        public string signature;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/WTL", Order=1)]
        public string staffID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/WTL", Order=2)]
        public string logDateTimeText;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/WTL", Order=3)]
        public string logType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/WTL", Order=4)]
        public string logSubType;
        
        public DeleteWorkTime() {
        }
        
        public DeleteWorkTime(string signature, string staffID, string logDateTimeText, string logType, string logSubType) {
            this.signature = signature;
            this.staffID = staffID;
            this.logDateTimeText = logDateTimeText;
            this.logType = logType;
            this.logSubType = logSubType;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteWorkTime_Result", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/WTL", IsWrapped=true)]
    public partial class DeleteWorkTime_Result {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/WTL", Order=0)]
        public bool return_value;
        
        public DeleteWorkTime_Result() {
        }
        
        public DeleteWorkTime_Result(bool return_value) {
            this.return_value = return_value;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetVacation", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/WTL", IsWrapped=true)]
    public partial class GetVacation {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/WTL", Order=0)]
        public string signature;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/WTL", Order=1)]
        public string staffID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/WTL", Order=2)]
        public int year;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/WTL", Order=3)]
        public WorkTimeLogger.WTL_Service.VacationDays vacations;
        
        public GetVacation() {
        }
        
        public GetVacation(string signature, string staffID, int year, WorkTimeLogger.WTL_Service.VacationDays vacations) {
            this.signature = signature;
            this.staffID = staffID;
            this.year = year;
            this.vacations = vacations;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetVacation_Result", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/WTL", IsWrapped=true)]
    public partial class GetVacation_Result {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/WTL", Order=0)]
        public bool return_value;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/WTL", Order=1)]
        public WorkTimeLogger.WTL_Service.VacationDays vacations;
        
        public GetVacation_Result() {
        }
        
        public GetVacation_Result(bool return_value, WorkTimeLogger.WTL_Service.VacationDays vacations) {
            this.return_value = return_value;
            this.vacations = vacations;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetDefaultBreak", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/WTL", IsWrapped=true)]
    public partial class SetDefaultBreak {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/WTL", Order=0)]
        public string signature;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/WTL", Order=1)]
        public string staffID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/WTL", Order=2)]
        public int year;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/WTL", Order=3)]
        public int week;
        
        public SetDefaultBreak() {
        }
        
        public SetDefaultBreak(string signature, string staffID, int year, int week) {
            this.signature = signature;
            this.staffID = staffID;
            this.year = year;
            this.week = week;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetDefaultBreak_Result", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/WTL", IsWrapped=true)]
    public partial class SetDefaultBreak_Result {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/WTL", Order=0)]
        public bool return_value;
        
        public SetDefaultBreak_Result() {
        }
        
        public SetDefaultBreak_Result(bool return_value) {
            this.return_value = return_value;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangePassword", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/WTL", IsWrapped=true)]
    public partial class ChangePassword {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/WTL", Order=0)]
        public string signature;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/WTL", Order=1)]
        public string newSignature;
        
        public ChangePassword() {
        }
        
        public ChangePassword(string signature, string newSignature) {
            this.signature = signature;
            this.newSignature = newSignature;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangePassword_Result", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/WTL", IsWrapped=true)]
    public partial class ChangePassword_Result {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/WTL", Order=0)]
        public bool return_value;
        
        public ChangePassword_Result() {
        }
        
        public ChangePassword_Result(bool return_value) {
            this.return_value = return_value;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="StaffIsManager", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/WTL", IsWrapped=true)]
    public partial class StaffIsManager {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/WTL", Order=0)]
        public string staffID;
        
        public StaffIsManager() {
        }
        
        public StaffIsManager(string staffID) {
            this.staffID = staffID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="StaffIsManager_Result", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/WTL", IsWrapped=true)]
    public partial class StaffIsManager_Result {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/WTL", Order=0)]
        public bool return_value;
        
        public StaffIsManager_Result() {
        }
        
        public StaffIsManager_Result(bool return_value) {
            this.return_value = return_value;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCurrEmployeeNo", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/WTL", IsWrapped=true)]
    public partial class GetCurrEmployeeNo {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/WTL", Order=0)]
        public string signature;
        
        public GetCurrEmployeeNo() {
        }
        
        public GetCurrEmployeeNo(string signature) {
            this.signature = signature;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCurrEmployeeNo_Result", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/WTL", IsWrapped=true)]
    public partial class GetCurrEmployeeNo_Result {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/WTL", Order=0)]
        public string return_value;
        
        public GetCurrEmployeeNo_Result() {
        }
        
        public GetCurrEmployeeNo_Result(string return_value) {
            this.return_value = return_value;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface WTL_PortChannel : WorkTimeLogger.WTL_Service.WTL_Port, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WTL_PortClient : System.ServiceModel.ClientBase<WorkTimeLogger.WTL_Service.WTL_Port>, WorkTimeLogger.WTL_Service.WTL_Port {
        
        public WTL_PortClient() {
        }
        
        public WTL_PortClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WTL_PortClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WTL_PortClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WTL_PortClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WorkTimeLogger.WTL_Service.GetServerTime_Result WorkTimeLogger.WTL_Service.WTL_Port.GetServerTime(WorkTimeLogger.WTL_Service.GetServerTime request) {
            return base.Channel.GetServerTime(request);
        }
        
        public bool GetServerTime(string signature, ref System.DateTime serverTime) {
            WorkTimeLogger.WTL_Service.GetServerTime inValue = new WorkTimeLogger.WTL_Service.GetServerTime();
            inValue.signature = signature;
            inValue.serverTime = serverTime;
            WorkTimeLogger.WTL_Service.GetServerTime_Result retVal = ((WorkTimeLogger.WTL_Service.WTL_Port)(this)).GetServerTime(inValue);
            serverTime = retVal.serverTime;
            return retVal.return_value;
        }
        
        public System.Threading.Tasks.Task<WorkTimeLogger.WTL_Service.GetServerTime_Result> GetServerTimeAsync(WorkTimeLogger.WTL_Service.GetServerTime request) {
            return base.Channel.GetServerTimeAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WorkTimeLogger.WTL_Service.GetStaffMember_Result WorkTimeLogger.WTL_Service.WTL_Port.GetStaffMember(WorkTimeLogger.WTL_Service.GetStaffMember request) {
            return base.Channel.GetStaffMember(request);
        }
        
        public bool GetStaffMember(string signature, string staffFilter, ref WorkTimeLogger.WTL_Service.Member staff) {
            WorkTimeLogger.WTL_Service.GetStaffMember inValue = new WorkTimeLogger.WTL_Service.GetStaffMember();
            inValue.signature = signature;
            inValue.staffFilter = staffFilter;
            inValue.staff = staff;
            WorkTimeLogger.WTL_Service.GetStaffMember_Result retVal = ((WorkTimeLogger.WTL_Service.WTL_Port)(this)).GetStaffMember(inValue);
            staff = retVal.staff;
            return retVal.return_value;
        }
        
        public System.Threading.Tasks.Task<WorkTimeLogger.WTL_Service.GetStaffMember_Result> GetStaffMemberAsync(WorkTimeLogger.WTL_Service.GetStaffMember request) {
            return base.Channel.GetStaffMemberAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WorkTimeLogger.WTL_Service.GetShiftplan_Result WorkTimeLogger.WTL_Service.WTL_Port.GetShiftplan(WorkTimeLogger.WTL_Service.GetShiftplan request) {
            return base.Channel.GetShiftplan(request);
        }
        
        public bool GetShiftplan(string signature, int year, int weekNo, ref WorkTimeLogger.WTL_Service.ShiftPlans shiftplans) {
            WorkTimeLogger.WTL_Service.GetShiftplan inValue = new WorkTimeLogger.WTL_Service.GetShiftplan();
            inValue.signature = signature;
            inValue.year = year;
            inValue.weekNo = weekNo;
            inValue.shiftplans = shiftplans;
            WorkTimeLogger.WTL_Service.GetShiftplan_Result retVal = ((WorkTimeLogger.WTL_Service.WTL_Port)(this)).GetShiftplan(inValue);
            shiftplans = retVal.shiftplans;
            return retVal.return_value;
        }
        
        public System.Threading.Tasks.Task<WorkTimeLogger.WTL_Service.GetShiftplan_Result> GetShiftplanAsync(WorkTimeLogger.WTL_Service.GetShiftplan request) {
            return base.Channel.GetShiftplanAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WorkTimeLogger.WTL_Service.GetWorkTime_Result WorkTimeLogger.WTL_Service.WTL_Port.GetWorkTime(WorkTimeLogger.WTL_Service.GetWorkTime request) {
            return base.Channel.GetWorkTime(request);
        }
        
        public bool GetWorkTime(string signature, string staffID, string dateFrom, string dateTo, ref WorkTimeLogger.WTL_Service.WorkTimes workTimes) {
            WorkTimeLogger.WTL_Service.GetWorkTime inValue = new WorkTimeLogger.WTL_Service.GetWorkTime();
            inValue.signature = signature;
            inValue.staffID = staffID;
            inValue.dateFrom = dateFrom;
            inValue.dateTo = dateTo;
            inValue.workTimes = workTimes;
            WorkTimeLogger.WTL_Service.GetWorkTime_Result retVal = ((WorkTimeLogger.WTL_Service.WTL_Port)(this)).GetWorkTime(inValue);
            workTimes = retVal.workTimes;
            return retVal.return_value;
        }
        
        public System.Threading.Tasks.Task<WorkTimeLogger.WTL_Service.GetWorkTime_Result> GetWorkTimeAsync(WorkTimeLogger.WTL_Service.GetWorkTime request) {
            return base.Channel.GetWorkTimeAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WorkTimeLogger.WTL_Service.GetLastWorkTime_Result WorkTimeLogger.WTL_Service.WTL_Port.GetLastWorkTime(WorkTimeLogger.WTL_Service.GetLastWorkTime request) {
            return base.Channel.GetLastWorkTime(request);
        }
        
        public bool GetLastWorkTime(string signature, string staffID, ref WorkTimeLogger.WTL_Service.WorkTimes workTimes) {
            WorkTimeLogger.WTL_Service.GetLastWorkTime inValue = new WorkTimeLogger.WTL_Service.GetLastWorkTime();
            inValue.signature = signature;
            inValue.staffID = staffID;
            inValue.workTimes = workTimes;
            WorkTimeLogger.WTL_Service.GetLastWorkTime_Result retVal = ((WorkTimeLogger.WTL_Service.WTL_Port)(this)).GetLastWorkTime(inValue);
            workTimes = retVal.workTimes;
            return retVal.return_value;
        }
        
        public System.Threading.Tasks.Task<WorkTimeLogger.WTL_Service.GetLastWorkTime_Result> GetLastWorkTimeAsync(WorkTimeLogger.WTL_Service.GetLastWorkTime request) {
            return base.Channel.GetLastWorkTimeAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WorkTimeLogger.WTL_Service.GetWorkTimeSurplus_Result WorkTimeLogger.WTL_Service.WTL_Port.GetWorkTimeSurplus(WorkTimeLogger.WTL_Service.GetWorkTimeSurplus request) {
            return base.Channel.GetWorkTimeSurplus(request);
        }
        
        public bool GetWorkTimeSurplus(string signature, string staffID, int _Mode, string dateFrom, string dateTo, ref WorkTimeLogger.WTL_Service.WorkTimeSurplus workTimeSurpluses) {
            WorkTimeLogger.WTL_Service.GetWorkTimeSurplus inValue = new WorkTimeLogger.WTL_Service.GetWorkTimeSurplus();
            inValue.signature = signature;
            inValue.staffID = staffID;
            inValue._Mode = _Mode;
            inValue.dateFrom = dateFrom;
            inValue.dateTo = dateTo;
            inValue.workTimeSurpluses = workTimeSurpluses;
            WorkTimeLogger.WTL_Service.GetWorkTimeSurplus_Result retVal = ((WorkTimeLogger.WTL_Service.WTL_Port)(this)).GetWorkTimeSurplus(inValue);
            workTimeSurpluses = retVal.workTimeSurpluses;
            return retVal.return_value;
        }
        
        public System.Threading.Tasks.Task<WorkTimeLogger.WTL_Service.GetWorkTimeSurplus_Result> GetWorkTimeSurplusAsync(WorkTimeLogger.WTL_Service.GetWorkTimeSurplus request) {
            return base.Channel.GetWorkTimeSurplusAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WorkTimeLogger.WTL_Service.SetWorkTime_Result WorkTimeLogger.WTL_Service.WTL_Port.SetWorkTime(WorkTimeLogger.WTL_Service.SetWorkTime request) {
            return base.Channel.SetWorkTime(request);
        }
        
        public bool SetWorkTime(string signature, string staffID, string logDateTimeText, string logType, string logSubType, string creator) {
            WorkTimeLogger.WTL_Service.SetWorkTime inValue = new WorkTimeLogger.WTL_Service.SetWorkTime();
            inValue.signature = signature;
            inValue.staffID = staffID;
            inValue.logDateTimeText = logDateTimeText;
            inValue.logType = logType;
            inValue.logSubType = logSubType;
            inValue.creator = creator;
            WorkTimeLogger.WTL_Service.SetWorkTime_Result retVal = ((WorkTimeLogger.WTL_Service.WTL_Port)(this)).SetWorkTime(inValue);
            return retVal.return_value;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<WorkTimeLogger.WTL_Service.SetWorkTime_Result> WorkTimeLogger.WTL_Service.WTL_Port.SetWorkTimeAsync(WorkTimeLogger.WTL_Service.SetWorkTime request) {
            return base.Channel.SetWorkTimeAsync(request);
        }
        
        public System.Threading.Tasks.Task<WorkTimeLogger.WTL_Service.SetWorkTime_Result> SetWorkTimeAsync(string signature, string staffID, string logDateTimeText, string logType, string logSubType, string creator) {
            WorkTimeLogger.WTL_Service.SetWorkTime inValue = new WorkTimeLogger.WTL_Service.SetWorkTime();
            inValue.signature = signature;
            inValue.staffID = staffID;
            inValue.logDateTimeText = logDateTimeText;
            inValue.logType = logType;
            inValue.logSubType = logSubType;
            inValue.creator = creator;
            return ((WorkTimeLogger.WTL_Service.WTL_Port)(this)).SetWorkTimeAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WorkTimeLogger.WTL_Service.DeleteWorkTime_Result WorkTimeLogger.WTL_Service.WTL_Port.DeleteWorkTime(WorkTimeLogger.WTL_Service.DeleteWorkTime request) {
            return base.Channel.DeleteWorkTime(request);
        }
        
        public bool DeleteWorkTime(string signature, string staffID, string logDateTimeText, string logType, string logSubType) {
            WorkTimeLogger.WTL_Service.DeleteWorkTime inValue = new WorkTimeLogger.WTL_Service.DeleteWorkTime();
            inValue.signature = signature;
            inValue.staffID = staffID;
            inValue.logDateTimeText = logDateTimeText;
            inValue.logType = logType;
            inValue.logSubType = logSubType;
            WorkTimeLogger.WTL_Service.DeleteWorkTime_Result retVal = ((WorkTimeLogger.WTL_Service.WTL_Port)(this)).DeleteWorkTime(inValue);
            return retVal.return_value;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<WorkTimeLogger.WTL_Service.DeleteWorkTime_Result> WorkTimeLogger.WTL_Service.WTL_Port.DeleteWorkTimeAsync(WorkTimeLogger.WTL_Service.DeleteWorkTime request) {
            return base.Channel.DeleteWorkTimeAsync(request);
        }
        
        public System.Threading.Tasks.Task<WorkTimeLogger.WTL_Service.DeleteWorkTime_Result> DeleteWorkTimeAsync(string signature, string staffID, string logDateTimeText, string logType, string logSubType) {
            WorkTimeLogger.WTL_Service.DeleteWorkTime inValue = new WorkTimeLogger.WTL_Service.DeleteWorkTime();
            inValue.signature = signature;
            inValue.staffID = staffID;
            inValue.logDateTimeText = logDateTimeText;
            inValue.logType = logType;
            inValue.logSubType = logSubType;
            return ((WorkTimeLogger.WTL_Service.WTL_Port)(this)).DeleteWorkTimeAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WorkTimeLogger.WTL_Service.GetVacation_Result WorkTimeLogger.WTL_Service.WTL_Port.GetVacation(WorkTimeLogger.WTL_Service.GetVacation request) {
            return base.Channel.GetVacation(request);
        }
        
        public bool GetVacation(string signature, string staffID, int year, ref WorkTimeLogger.WTL_Service.VacationDays vacations) {
            WorkTimeLogger.WTL_Service.GetVacation inValue = new WorkTimeLogger.WTL_Service.GetVacation();
            inValue.signature = signature;
            inValue.staffID = staffID;
            inValue.year = year;
            inValue.vacations = vacations;
            WorkTimeLogger.WTL_Service.GetVacation_Result retVal = ((WorkTimeLogger.WTL_Service.WTL_Port)(this)).GetVacation(inValue);
            vacations = retVal.vacations;
            return retVal.return_value;
        }
        
        public System.Threading.Tasks.Task<WorkTimeLogger.WTL_Service.GetVacation_Result> GetVacationAsync(WorkTimeLogger.WTL_Service.GetVacation request) {
            return base.Channel.GetVacationAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WorkTimeLogger.WTL_Service.SetDefaultBreak_Result WorkTimeLogger.WTL_Service.WTL_Port.SetDefaultBreak(WorkTimeLogger.WTL_Service.SetDefaultBreak request) {
            return base.Channel.SetDefaultBreak(request);
        }
        
        public bool SetDefaultBreak(string signature, string staffID, int year, int week) {
            WorkTimeLogger.WTL_Service.SetDefaultBreak inValue = new WorkTimeLogger.WTL_Service.SetDefaultBreak();
            inValue.signature = signature;
            inValue.staffID = staffID;
            inValue.year = year;
            inValue.week = week;
            WorkTimeLogger.WTL_Service.SetDefaultBreak_Result retVal = ((WorkTimeLogger.WTL_Service.WTL_Port)(this)).SetDefaultBreak(inValue);
            return retVal.return_value;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<WorkTimeLogger.WTL_Service.SetDefaultBreak_Result> WorkTimeLogger.WTL_Service.WTL_Port.SetDefaultBreakAsync(WorkTimeLogger.WTL_Service.SetDefaultBreak request) {
            return base.Channel.SetDefaultBreakAsync(request);
        }
        
        public System.Threading.Tasks.Task<WorkTimeLogger.WTL_Service.SetDefaultBreak_Result> SetDefaultBreakAsync(string signature, string staffID, int year, int week) {
            WorkTimeLogger.WTL_Service.SetDefaultBreak inValue = new WorkTimeLogger.WTL_Service.SetDefaultBreak();
            inValue.signature = signature;
            inValue.staffID = staffID;
            inValue.year = year;
            inValue.week = week;
            return ((WorkTimeLogger.WTL_Service.WTL_Port)(this)).SetDefaultBreakAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WorkTimeLogger.WTL_Service.ChangePassword_Result WorkTimeLogger.WTL_Service.WTL_Port.ChangePassword(WorkTimeLogger.WTL_Service.ChangePassword request) {
            return base.Channel.ChangePassword(request);
        }
        
        public bool ChangePassword(string signature, string newSignature) {
            WorkTimeLogger.WTL_Service.ChangePassword inValue = new WorkTimeLogger.WTL_Service.ChangePassword();
            inValue.signature = signature;
            inValue.newSignature = newSignature;
            WorkTimeLogger.WTL_Service.ChangePassword_Result retVal = ((WorkTimeLogger.WTL_Service.WTL_Port)(this)).ChangePassword(inValue);
            return retVal.return_value;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<WorkTimeLogger.WTL_Service.ChangePassword_Result> WorkTimeLogger.WTL_Service.WTL_Port.ChangePasswordAsync(WorkTimeLogger.WTL_Service.ChangePassword request) {
            return base.Channel.ChangePasswordAsync(request);
        }
        
        public System.Threading.Tasks.Task<WorkTimeLogger.WTL_Service.ChangePassword_Result> ChangePasswordAsync(string signature, string newSignature) {
            WorkTimeLogger.WTL_Service.ChangePassword inValue = new WorkTimeLogger.WTL_Service.ChangePassword();
            inValue.signature = signature;
            inValue.newSignature = newSignature;
            return ((WorkTimeLogger.WTL_Service.WTL_Port)(this)).ChangePasswordAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WorkTimeLogger.WTL_Service.StaffIsManager_Result WorkTimeLogger.WTL_Service.WTL_Port.StaffIsManager(WorkTimeLogger.WTL_Service.StaffIsManager request) {
            return base.Channel.StaffIsManager(request);
        }
        
        public bool StaffIsManager(string staffID) {
            WorkTimeLogger.WTL_Service.StaffIsManager inValue = new WorkTimeLogger.WTL_Service.StaffIsManager();
            inValue.staffID = staffID;
            WorkTimeLogger.WTL_Service.StaffIsManager_Result retVal = ((WorkTimeLogger.WTL_Service.WTL_Port)(this)).StaffIsManager(inValue);
            return retVal.return_value;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<WorkTimeLogger.WTL_Service.StaffIsManager_Result> WorkTimeLogger.WTL_Service.WTL_Port.StaffIsManagerAsync(WorkTimeLogger.WTL_Service.StaffIsManager request) {
            return base.Channel.StaffIsManagerAsync(request);
        }
        
        public System.Threading.Tasks.Task<WorkTimeLogger.WTL_Service.StaffIsManager_Result> StaffIsManagerAsync(string staffID) {
            WorkTimeLogger.WTL_Service.StaffIsManager inValue = new WorkTimeLogger.WTL_Service.StaffIsManager();
            inValue.staffID = staffID;
            return ((WorkTimeLogger.WTL_Service.WTL_Port)(this)).StaffIsManagerAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WorkTimeLogger.WTL_Service.GetCurrEmployeeNo_Result WorkTimeLogger.WTL_Service.WTL_Port.GetCurrEmployeeNo(WorkTimeLogger.WTL_Service.GetCurrEmployeeNo request) {
            return base.Channel.GetCurrEmployeeNo(request);
        }
        
        public string GetCurrEmployeeNo(string signature) {
            WorkTimeLogger.WTL_Service.GetCurrEmployeeNo inValue = new WorkTimeLogger.WTL_Service.GetCurrEmployeeNo();
            inValue.signature = signature;
            WorkTimeLogger.WTL_Service.GetCurrEmployeeNo_Result retVal = ((WorkTimeLogger.WTL_Service.WTL_Port)(this)).GetCurrEmployeeNo(inValue);
            return retVal.return_value;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<WorkTimeLogger.WTL_Service.GetCurrEmployeeNo_Result> WorkTimeLogger.WTL_Service.WTL_Port.GetCurrEmployeeNoAsync(WorkTimeLogger.WTL_Service.GetCurrEmployeeNo request) {
            return base.Channel.GetCurrEmployeeNoAsync(request);
        }
        
        public System.Threading.Tasks.Task<WorkTimeLogger.WTL_Service.GetCurrEmployeeNo_Result> GetCurrEmployeeNoAsync(string signature) {
            WorkTimeLogger.WTL_Service.GetCurrEmployeeNo inValue = new WorkTimeLogger.WTL_Service.GetCurrEmployeeNo();
            inValue.signature = signature;
            return ((WorkTimeLogger.WTL_Service.WTL_Port)(this)).GetCurrEmployeeNoAsync(inValue);
        }
    }
}
